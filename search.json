[{"path":"https://ecosystem-assessments.github.io/rcea/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://ecosystem-assessments.github.io/rcea/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Beauchesne. Author, maintainer, copyright holder. Kevin Cazelles. Author.","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Beauchesne David (2022). rcea: R package .... R package version 0.0.0.9000, https://github.com/david-beauchesne/rcea.","code":"@Manual{,   title = {rcea: {An} {R} package to ...},   author = {{Beauchesne David}},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://github.com/david-beauchesne/rcea}, }"},{"path":"https://ecosystem-assessments.github.io/rcea/index.html","id":"rcea-","dir":"","previous_headings":"","what":"Spatially-explicit cumulative effects assessments in R","title":"Spatially-explicit cumulative effects assessments in R","text":"goal R package rcea {{ PLEASE ADD LINES }}","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Spatially-explicit cumulative effects assessments in R","text":"can install development version GitHub : can attach package rcea:","code":"# install.packages(\"remotes\") remotes::install_github(\"david-beauchesne/rcea\") library(\"rcea\")"},{"path":"https://ecosystem-assessments.github.io/rcea/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Spatially-explicit cumulative effects assessments in R","text":"","code":"library(rcea) library(stars) #> Loading required package: abind #> Loading required package: sf #> Linking to GEOS 3.11.2, GDAL 3.6.3, PROJ 9.2.0; sf_use_s2() is TRUE  # Data drivers <- rcea:::drivers  vc <- rcea:::vc sensitivity <- rcea:::sensitivity metaweb <- rcea:::metaweb trophic_sensitivity <- rcea::trophic_sensitivity pal <- viridis::viridis  # Plots  plot(merge(drivers), col = pal) plot(merge(vc), col = pal(1)) #> Warning in plot.stars(merge(vc), col = pal(1)): breaks=\"quantile\" leads to a #> single class; maybe try breaks=\"equal\" instead? # Cumulative footprint foot_dr <- cea_extract(drivers, cumul_fun = \"footprint\") foot_vc <- cea_extract(vc, cumul_fun = \"footprint\") plot(foot_dr, col = pal) plot(foot_vc, breaks = \"equal\", col = pal) # Cumulative exposure  expo <- exposure(drivers, vc, \"stars\")  # Extract specific attributes and evaluate cumulative exposure dr_sel <- c(\"driver1\",\"driver5\") vc_sel <- c(\"vc4\",\"vc7\",\"vc10\",\"vc12\") dat <- cea_extract(expo, dr_sel = dr_sel, vc_sel = vc_sel)  plot(dat[\"vc4\"], col = pal) # Exposure of vc4 to driver1 and driver5 # Cumulative effects assessment (Halpern et al. 2008) halpern <- cea(drivers, vc, sensitivity, \"stars\")  # Cumulative effects of all drivers on all vc dat <- cea_extract(halpern, cumul_fun = \"drivers\") plot(merge(dat), breaks = \"equal\", col = pal) # Cumulative effects of all drivers on each vc dat <- cea_extract(halpern, cumul_fun = \"vc\")  plot(merge(dat), breaks = \"equal\", col = pal) # Full cumulative effects dat <- cea_extract(dat, cumul_fun = \"full\")  plot(dat, breaks = \"equal\", col = pal) # Network-scale cumulative effects assessment (Beauchesne et al. 2021) beauchesne <- ncea(drivers, vc, sensitivity, metaweb, trophic_sensitivity)  # Net cumulative effects dat <- cea_extract(beauchesne$net, cumul_fun = \"full\")  plot(dat, breaks = \"equal\", col = pal) # Direct cumulative effects dat <- cea_extract(beauchesne$direct, cumul_fun = \"full\")  plot(dat, breaks = \"equal\", col = pal) # Indirect cumulative effects dat <- cea_extract(beauchesne$indirect, cumul_fun = \"full\")  plot(dat, breaks = \"equal\", col = pal)"},{"path":"https://ecosystem-assessments.github.io/rcea/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Spatially-explicit cumulative effects assessments in R","text":"Please cite package : Beauchesne David (2023) rcea: R package perform cumulative effects assessments. R package version 0.0.0.9000.","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Spatially-explicit cumulative effects assessments in R","text":"Please note rcea project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/cea.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative effects assessments — cea","title":"Cumulative effects assessments — cea","text":"Assessment cumulative effects using Halpern et al. 2008 method.","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/cea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative effects assessments — cea","text":"","code":"cea(drivers, vc, sensitivity, exportAs = \"list\")  get_cekm_cea(dat, vc)"},{"path":"https://ecosystem-assessments.github.io/rcea/reference/cea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative effects assessments — cea","text":"drivers distribution intensity environmental drivers stars object vc distribution valued components stars object sensitivity matrix environmental drivers valued component, name used drivers vc exportAs string, type object created, either \"list\" \"stars\" object. dat TODO","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/cea.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Cumulative effects assessments — cea","text":"get_cekm_cea(): get effects per km2","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/cea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative effects assessments — cea","text":"","code":"# Data drivers <- rcea:::drivers vc <- rcea:::vc sensitivity <- rcea:::sensitivity  # Species-scale effects (halpern <- cea(drivers, vc, sensitivity, \"stars\")) #> stars object with 3 dimensions and 20 attributes #> attribute(s): #>             Min.     1st Qu.     Median      Mean   3rd Qu.      Max.  NA's #> vc1   0.00000000 0.197844533 0.34959492 0.3374289 0.4932443 0.9801095 19256 #> vc2   0.00000000 0.000000000 0.11506835 0.1974660 0.3511900 0.9098666 19357 #> vc3   0.00000000 0.028556899 0.05427342 0.2055286 0.3892334 0.9999287 18655 #> vc4   0.00000000 0.152847296 0.39069861 0.3570992 0.5125498 0.9547808 18527 #> vc5   0.00000000 0.000000000 0.27112643 0.2837859 0.4618074 0.9093915 18953 #> vc6   0.00000000 0.000000000 0.39358294 0.3081420 0.5254207 0.8704866 18680 #> vc7   0.01297907 0.125280091 0.25660111 0.2799213 0.4276007 0.8765720 18948 #> vc8   0.00000000 0.076629590 0.28697593 0.3023585 0.5139304 0.9302585 19468 #> vc9   0.00000000 0.108950922 0.22388530 0.2683110 0.4175093 0.8018385 18613 #> vc10  0.00000000 0.131755392 0.25594767 0.3054904 0.4745609 0.9928748 18404 #> vc11  0.00000000 0.136290943 0.26145624 0.2902475 0.4435404 0.9609001 17697 #> vc12  0.00000000 0.024573000 0.35095529 0.2977374 0.4931013 0.8410465 18929 #> vc13  0.00000000 0.000000000 0.06812157 0.1318422 0.2460166 0.4855436 18840 #> vc14  0.00000000 0.001754965 0.14231378 0.2371141 0.4687777 0.8972964 18938 #> vc15  0.00000000 0.103734955 0.22250580 0.2872501 0.4796972 0.9036774 19300 #> vc16  0.02732438 0.119494253 0.28250320 0.3018985 0.4581889 0.8433375 18759 #> vc17  0.00000000 0.000000000 0.13293700 0.1900736 0.2629435 0.9295225 18601 #> vc18  0.00000000 0.059879067 0.10645798 0.1628473 0.1921856 0.8944353 18169 #> vc19  0.00000000 0.015881054 0.29676611 0.2664306 0.4466082 0.8374260 17974 #> vc20  0.00000000 0.000000000 0.11460514 0.1906253 0.2842038 0.8975917 18437 #> dimension(s): #>         from to offset delta              values x/y #> x          1 45   -100     5                NULL [x] #> y          1 45    125    -5                NULL [y] #> drivers    1 10     NA    NA driver1,...,driver9     plot(halpern)  halpern <- merge(halpern, name = \"vc\") |>   split(\"drivers\") plot(halpern)  # do not work # get_cekm_cea(halpern, vc)"},{"path":"https://ecosystem-assessments.github.io/rcea/reference/cea_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract attributes and aggregate cumulative effects assessment results — cea_extract","title":"Extract attributes and aggregate cumulative effects assessment results — cea_extract","text":"Function extract specific drivers vc interest drivers, valued component, exposure cumulative effects assessments results, aggregate data drivers, valued components, drivers valued components.","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/cea_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract attributes and aggregate cumulative effects assessment results — cea_extract","text":"","code":"cea_extract(dat, dr_sel = NULL, vc_sel = NULL, cumul_fun = \"none\")"},{"path":"https://ecosystem-assessments.github.io/rcea/reference/cea_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract attributes and aggregate cumulative effects assessment results — cea_extract","text":"dat stars object, either drivers, valued components, exposure, cumulative effects assessment network-sacale cumulative effects assessment results dr_sel string, name drivers extract vc_sel string, name valued components extract cumul_fun function apply stars object, one \"drivers\" cumulative effects drivers value components, \"vc\" cumulative effects drivers valued component, \"full\" cumulative effects drivers valued components, \"footprint\" cumulative footprint drivers valued components, \"none\" keep data , .e. extract specific drivers valued components assessment results.","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/cea_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract attributes and aggregate cumulative effects assessment results — cea_extract","text":"","code":"# Data drivers <- rcea:::drivers  vc <- rcea:::vc sensitivity <- rcea:::sensitivity  # Cumulative effects assessment dat <- cea(drivers, vc, sensitivity, \"stars\")  # Extract attributes dr_sel <- c(\"driver1\",\"driver5\") vc_sel <- c(\"vc4\",\"vc7\",\"vc10\",\"vc12\") cea_extract(dat, dr_sel = dr_sel, vc_sel = vc_sel)  #> stars object with 3 dimensions and 4 attributes #> attribute(s): #>             Min.   1st Qu.    Median      Mean   3rd Qu.      Max. NA's #> vc4   0.07012614 0.1451942 0.4022893 0.3566048 0.5065445 0.8237497 3657 #> vc7   0.08427606 0.1846463 0.3120659 0.3058532 0.4161193 0.5804424 3810 #> vc10  0.15005458 0.3687080 0.4638575 0.5160180 0.6737182 0.9928748 3696 #> vc12  0.00000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 3757 #> dimension(s): #>         from to offset delta           values x/y #> x          1 45   -100     5             NULL [x] #> y          1 45    125    -5             NULL [y] #> drivers    1  2     NA    NA driver1, driver5      # Cumulative footprint of selected drivers and valued components cea_extract(drivers, dr_sel = dr_sel, cumul_fun = \"footprint\")  #> stars object with 2 dimensions and 1 attribute #> attribute(s): #>                       Min. 1st Qu. Median      Mean   3rd Qu.     Max. #> cumulative_footprint     0       0      0 0.3200989 0.6082802 1.731633 #> dimension(s): #>   from to offset delta x/y #> x    1 45   -100     5 [x] #> y    1 45    125    -5 [y] cea_extract(vc, vc_sel = vc_sel, cumul_fun = \"footprint\")  #> stars object with 2 dimensions and 1 attribute #> attribute(s): #>                       Min. 1st Qu. Median     Mean 3rd Qu. Max. #> cumulative_footprint     0       0      1 1.083457       2    4 #> dimension(s): #>   from to offset delta x/y #> x    1 45   -100     5 [x] #> y    1 45    125    -5 [y]  # Cumulative effects of all drivers on all vc cea_extract(dat, cumul_fun = \"drivers\") #> stars object with 2 dimensions and 10 attributes #> attribute(s): #>           Min. 1st Qu. Median      Mean   3rd Qu.     Max. #> driver1      0       0      0 0.4539324 0.8480668 3.859231 #> driver10     0       0      0 0.7130826 1.3788735 4.893114 #> driver2      0       0      0 0.1172817 0.0000000 2.413071 #> driver3      0       0      0 0.6557617 1.2542816 5.316093 #> driver4      0       0      0 0.2484260 0.0000000 4.319397 #> driver5      0       0      0 0.2501246 0.0000000 4.322386 #> driver6      0       0      0 0.3177023 0.0000000 3.690482 #> driver7      0       0      0 0.3622950 0.6198464 3.908189 #> driver8      0       0      0 0.3627519 0.1927599 4.203816 #> driver9      0       0      0 0.4047631 0.7306683 3.509189 #> dimension(s): #>   from to offset delta x/y #> x    1 45   -100     5 [x] #> y    1 45    125    -5 [y]  # Cumulative effects of all drivers on each vc cea_extract(dat, cumul_fun = \"vc\")  #> stars object with 2 dimensions and 20 attributes #> attribute(s): #>       Min. 1st Qu. Median       Mean    3rd Qu.     Max. #> vc1      0       0      0 0.16563179 0.00000000 2.685106 #> vc2      0       0      0 0.08708005 0.00000000 2.011935 #> vc3      0       0      0 0.16188552 0.00000000 1.942717 #> vc4      0       0      0 0.30384288 0.49278781 2.956124 #> vc5      0       0      0 0.18176312 0.00000000 2.378030 #> vc6      0       0      0 0.23890513 0.00000000 2.284281 #> vc7      0       0      0 0.17997906 0.00000000 2.513321 #> vc8      0       0      0 0.11676263 0.00000000 2.066466 #> vc9      0       0      0 0.21690132 0.05165895 2.209173 #> vc10     0       0      0 0.27848653 0.50509175 2.520944 #> vc11     0       0      0 0.36592681 0.71713361 2.798803 #> vc12     0       0      0 0.19422772 0.00000000 2.488768 #> vc13     0       0      0 0.09180124 0.00000000 1.182442 #> vc14     0       0      0 0.15362652 0.00000000 2.133657 #> vc15     0       0      0 0.13475932 0.00000000 2.265969 #> vc16     0       0      0 0.22228674 0.00000000 2.369847 #> vc17     0       0      0 0.15478093 0.12446228 1.788019 #> vc18     0       0      0 0.16735075 0.21526754 1.734678 #> vc19     0       0      0 0.29945482 0.50017858 2.345047 #> vc20     0       0      0 0.17066849 0.10875808 1.855104 #> dimension(s): #>   from to offset delta x/y #> x    1 45   -100     5 [x] #> y    1 45    125    -5 [y]  # Full cumulative effects cea_extract(dat, cumul_fun = \"full\")  #> stars object with 2 dimensions and 1 attribute #> attribute(s): #>                     Min.  1st Qu.   Median     Mean  3rd Qu.     Max. #> cumulative_effects     0 2.279211 3.527187 3.886121 5.097251 16.90593 #> dimension(s): #>   from to offset delta x/y #> x    1 45   -100     5 [x] #> y    1 45    125    -5 [y]"},{"path":"https://ecosystem-assessments.github.io/rcea/reference/chk_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if folder exists and create if not — chk_create","title":"Check if folder exists and create if not — chk_create","text":"Check folder exists create ","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/chk_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if folder exists and create if not — chk_create","text":"","code":"chk_create(path)"},{"path":"https://ecosystem-assessments.github.io/rcea/reference/chk_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if folder exists and create if not — chk_create","text":"path path folder use output, create already exist","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative exposure assessment — exposure","title":"Cumulative exposure assessment — exposure","text":"Assessment exposure (.e. overlap) valued components environmental drivers context cumulative effects assessments","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative exposure assessment — exposure","text":"","code":"exposure(drivers, vc, exportAs = c(\"list\", \"stars\"))"},{"path":"https://ecosystem-assessments.github.io/rcea/reference/exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative exposure assessment — exposure","text":"drivers distribution intensity environmental drivers stars object vc distribution valued components stars object exportAs string, type object created, either \"list\" \"stars\" object","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/exposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative exposure assessment — exposure","text":"","code":"# Data drivers <- rcea:::drivers vc <- rcea:::vc  # Exposure (expo <- exposure(drivers, vc, \"stars\")) #> stars object with 3 dimensions and 20 attributes #> attribute(s): #>            Min.   1st Qu.    Median      Mean   3rd Qu. Max.  NA's #> vc1   0.2021352 0.5213672 0.6129986 0.6136429 0.6940780    1 19256 #> vc2   0.2616746 0.5185849 0.6117746 0.6113144 0.6938048    1 19357 #> vc3   0.2375020 0.5226039 0.6082802 0.6068182 0.6858955    1 18655 #> vc4   0.1941005 0.5288972 0.6139892 0.6120621 0.6893543    1 18527 #> vc5   0.2452544 0.5281468 0.6097971 0.6143875 0.6969998    1 18953 #> vc6   0.2759878 0.5257590 0.6054765 0.6076875 0.6823719    1 18680 #> vc7   0.2009212 0.5297309 0.6149135 0.6118864 0.6935994    1 18948 #> vc8   0.1941005 0.5242333 0.6048160 0.6104447 0.6839465    1 19468 #> vc9   0.1638378 0.5231641 0.6097690 0.6108584 0.6938352    1 18613 #> vc10  0.1941005 0.5304054 0.6133002 0.6136116 0.6962600    1 18404 #> vc11  0.1638378 0.5282763 0.6140082 0.6122241 0.6929783    1 17697 #> vc12  0.2445233 0.5222109 0.6105871 0.6082432 0.6923947    1 18929 #> vc13  0.1941005 0.5225111 0.6105436 0.6091227 0.6927667    1 18840 #> vc14  0.2009212 0.5283231 0.6117160 0.6095563 0.6944252    1 18938 #> vc15  0.1941005 0.5204771 0.6076877 0.6033786 0.6835737    1 19300 #> vc16  0.1941005 0.5294499 0.6185720 0.6143025 0.6923047    1 18759 #> vc17  0.2021352 0.5241139 0.6077421 0.6083483 0.6912994    1 18601 #> vc18  0.1638378 0.5280775 0.6140542 0.6131161 0.6939189    1 18169 #> vc19  0.2061731 0.5285207 0.6117942 0.6121077 0.6909626    1 17974 #> vc20  0.1941005 0.5237485 0.6129409 0.6121863 0.6953557    1 18437 #> dimension(s): #>         from to offset delta              values x/y #> x          1 45   -100     5                NULL [x] #> y          1 45    125    -5                NULL [y] #> drivers    1 10     NA    NA driver1,...,driver9     plot(expo)  expo <- merge(expo, name = \"vc\") |>   split(\"drivers\") plot(expo)"},{"path":"https://ecosystem-assessments.github.io/rcea/reference/helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"rcea helper functions — make_array","title":"rcea helper functions — make_array","text":"List functions support main functions rcea package","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcea helper functions — make_array","text":"","code":"make_array(dat)  make_stars(dat, drivers, vc)  make_stars2(dat, drivers, vc)"},{"path":"https://ecosystem-assessments.github.io/rcea/reference/helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcea helper functions — make_array","text":"dat list cea matrices cea array drivers distribution intensity environmental drivers stars object vc distribution valued components stars object","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/helpers.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"rcea helper functions — make_array","text":"make_array(): create array list cea matrices make_stars(): create stars object list cea matrices cea array make_stars2(): create stars object list cea matrices cea array","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/ncea.html","id":null,"dir":"Reference","previous_headings":"","what":"Network-scale cumulative effects assessments — ncea","title":"Network-scale cumulative effects assessments — ncea","text":"Assessment cumulative effects related metrics using Beauchesne et al. 2021 method.","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/ncea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network-scale cumulative effects assessments — ncea","text":"","code":"ncea(   drivers,   vc,   sensitivity,   metaweb,   trophic_sensitivity,   w_d = 0.5,   w_i = 0.25,   exportAs = \"stars\" )  cea_binary(effect)  triads(metaweb, trophic_sensitivity)  cea_pathways(effect, vc)  ncea_pathways(vc_id, motifs)  ncea_pathways_(direct_pathways, motifs)  ncea_motifs(direct_effect, indirect_pathways)  ncea_effects(motif_summary, w_d = 0.5, w_i = 0.25)  get_species_contribution(motif_effects)  get_direct_indirect(motif_effects)  get_net(motif_effects)  get_cekm_ncea(motif_effects, vc)  ncea_split(   drivers,   vc,   sensitivity,   metaweb,   trophic_sensitivity,   w_d = 0.5,   w_i = 0.25,   output = \"output/ncea\",   niter = NULL,   run = NULL )"},{"path":"https://ecosystem-assessments.github.io/rcea/reference/ncea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network-scale cumulative effects assessments — ncea","text":"drivers distribution intensity environmental drivers stars object vc distribution valued components stars object sensitivity matrix environmental drivers valued component, name used drivers vc metaweb matrix valued component valued component describing binary interations structuring network valued components trophic_sensitivity data.frame trophic sensitivities, default Beauchesne. Available data package data(trophic_sensitivity) w_d, w_i weight direct (w_d) indirect (w_i) modules calculating network-scale cea scores; w_d + 2*w_i equal 1. exportAs string, type object created, either multiple \"data.frame\" \"stars\" objects effect TODO vc_id TODO motifs TODO direct_pathways TODO direct_effect TODO indirect_pathways TODO motif_summary TODO motif_effects TODO output TODO niter TODO run TODO","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/ncea.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Network-scale cumulative effects assessments — ncea","text":"cea_binary(): transform effects assessment binary 2D matrix assess presence effect valued component specific grid cell triads(): assess triads interest metaweb attach trophic sensitivities cea_pathways(): pathways direct effect ncea_pathways(): assess triads interest metaweb ncea_pathways_(): apply ncea_pathways get pathways indirect effect trophic sensitivity cells ncea_motifs(): get effects drivers species motifs cell ncea_effects(): evaluate effects motifs using trophic sensitivity effect weights get_species_contribution(): get contribution species indirect effects get_direct_indirect(): get direct indirect effects drivers get_net(): get net effects drivers get_cekm_ncea(): get effects per km2 ncea_split(): split assessment smaller parts larger analyses run memory issues need run parallel","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/ncea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network-scale cumulative effects assessments — ncea","text":"","code":"# Data drivers <- rcea:::drivers vc <- rcea:::vc sensitivity <- rcea:::sensitivity metaweb <- rcea:::metaweb trophic_sensitivity <- rcea::trophic_sensitivity  if (FALSE) { # Network-scale effects beauchesne <- ncea(drivers, vc, sensitivity, metaweb, trophic_sensitivity) plot(beauchesne$net) plot(beauchesne$direct) plot(beauchesne$indirect) }"},{"path":"https://ecosystem-assessments.github.io/rcea/reference/ncea_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Network-scale cumulative effects assessments for a single focal species — ncea_species","title":"Network-scale cumulative effects assessments for a single focal species — ncea_species","text":"Assessment cumulative effects related metrics using Beauchesne et al. 2021 method.","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/ncea_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network-scale cumulative effects assessments for a single focal species — ncea_species","text":"","code":"ncea_species(   focus,   drivers,   vc,   sensitivity,   metaweb,   trophic_sensitivity,   w_d = 0.5,   w_i = 0.25,   output = \"output/ncea\",   output_format = \"geotiff\" )"},{"path":"https://ecosystem-assessments.github.io/rcea/reference/ncea_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network-scale cumulative effects assessments for a single focal species — ncea_species","text":"focus named argument, string name valued component perform assessment. drivers distribution intensity environmental drivers stars object vc distribution valued components stars object sensitivity matrix environmental drivers valued component, name used drivers vc metaweb matrix valued component valued component describing binary interations structuring network valued components trophic_sensitivity data.frame trophic sensitivities, default Beauchesne. Available data package data(trophic_sensitivity) w_d, w_i weight direct (w_d) indirect (w_i) modules calculating network-scale cea scores; w_d + 2*w_i equal 1. output relative path export results assessment. output_format output format, one geotiff COG.","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/ncea_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network-scale cumulative effects assessments for a single focal species — ncea_species","text":"","code":"# Data drivers <- rcea:::drivers vc <- rcea:::vc sensitivity <- rcea:::sensitivity metaweb <- rcea:::metaweb trophic_sensitivity <- rcea::trophic_sensitivity  if (FALSE) { # Network-scale effects for individual species ncea_species(focus = \"vc1\", drivers, vc, sensitivity, metaweb, trophic_sensitivity) ncea_species(focus = \"vc1\", drivers, vc, sensitivity, metaweb, trophic_sensitivity, output_format = \"COG\") }"},{"path":"https://ecosystem-assessments.github.io/rcea/reference/rcea.html","id":null,"dir":"Reference","previous_headings":"","what":"rcea: package to perform cumulative effects assessments — rcea","title":"rcea: package to perform cumulative effects assessments — rcea","text":"Package perform cumulative effects assessments.","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/trophic_sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Trophic sensitivity — trophic_sensitivity","title":"Trophic sensitivity — trophic_sensitivity","text":"dataset containing simplified values trophic sensitivity measured Beauchesne et al. 2021 (DOI: 10.1111/ele.13841) used Beauchesne et al. 2020 network-scale cumulative effects assessments","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/trophic_sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trophic sensitivity — trophic_sensitivity","text":"","code":"trophic_sensitivity"},{"path":[]},{"path":"https://ecosystem-assessments.github.io/rcea/reference/trophic_sensitivity.html","id":"trophic-sensitivity","dir":"Reference","previous_headings":"","what":"trophic_sensitivity","title":"Trophic sensitivity — trophic_sensitivity","text":"data frame 124 rows 10 columns: Motif Name motifs: apparent competition (ap); disconnected (di); exploitative competition (ex); omnivory (om); partially connected (pa); tri-trophic interaction (tt) Species Position species motif (x,y,z) px, py, pz Pathways effects, whether species x, y z affected disturbances Sensitivity Trophic sensitivity scaled 0 1 sensitivity_original Original value trophic sensitivity pathID Unique identifier pathway effect speciesID Numeric ID species position motifs motifID Numeric ID motifs","code":""},{"path":"https://ecosystem-assessments.github.io/rcea/reference/trophic_sensitivity.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Trophic sensitivity — trophic_sensitivity","text":"https://github.com/david-beauchesne/FoodWeb-MultiStressors/blob/master/Data/vulnerability.RData https://onlinelibrary.wiley.com/doi/abs/10.1111/ele.13841 https://semaphore.uqar.ca/id/eprint/1922/1/David_Beauchesne_decembre2020.pdf","code":""}]
